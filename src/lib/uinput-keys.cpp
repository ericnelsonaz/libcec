#include "uinput-keys.h"
#include <linux/input.h>

#define ARRAY_SIZE(array) (sizeof(array) / sizeof(*array))

static string_table_t keys[] = {
    {KEY_ESC, "DOM 27 - KEY_ESC"},
    {KEY_1, "DOM 49 - KEY_1"},
    {KEY_2, "DOM 50 - KEY_2"},
    {KEY_3, "DOM 51 - KEY_3"},
    {KEY_4, "DOM 52 - KEY_4"},
    {KEY_5, "DOM 53 - KEY_5"},
    {KEY_6, "DOM 54 - KEY_6"},
    {KEY_7, "DOM 55 - KEY_7"},
    {KEY_8, "DOM 56 - KEY_8"},
    {KEY_9, "DOM 57 - KEY_9"},
    {KEY_0, "DOM 48 - KEY_0"},
    {KEY_MINUS, "DOM 18 - KEY_MINUS"},
    {KEY_EQUAL, "DOM 18 - KEY_EQUAL"},
    {KEY_BACKSPACE, "DOM 8  - KEY_BACKSPACE"},
    {KEY_TAB, "DOM 9  - KEY_TAB"},
    {KEY_Q, "DOM 81 - KEY_Q"},
    {KEY_W, "DOM 87 - KEY_W"},
    {KEY_E, "DOM 69 - KEY_E"},
    {KEY_R, "DOM 82 - KEY_R"},
    {KEY_T, "DOM 84 - KEY_T"},
    {KEY_Y, "DOM 89 - KEY_Y"},
    {KEY_U, "DOM 85 - KEY_U"},
    {KEY_I, "DOM 73 - KEY_I"},
    {KEY_O, "DOM 79 - KEY_O"},
    {KEY_P, "DOM 80 - KEY_P"},
    {KEY_LEFTBRACE, "DOM 21 - KEY_LEFTBRACE"},
    {KEY_RIGHTBRACE, "DOM 22 - KEY_RIGHTBRACE"},
    {KEY_ENTER, "DOM 13 - KEY_ENTER"},
    {KEY_LEFTCTRL, "DOM 17 - KEY_LEFTCTRL"},
    {KEY_A, "DOM 65 - KEY_A"},
    {KEY_S, "DOM 83 - KEY_S"},
    {KEY_D, "DOM 68 - KEY_D"},
    {KEY_F, "DOM 70 - KEY_F"},
    {KEY_G, "DOM 71 - KEY_G"},
    {KEY_H, "DOM 72 - KEY_H"},
    {KEY_J, "DOM 74 - KEY_J"},
    {KEY_K, "DOM 75 - KEY_K"},
    {KEY_L, "DOM 76 - KEY_L"},
    {KEY_SEMICOLON, "DOM 18 - KEY_SEMICOLON"},
    {KEY_APOSTROPHE, "DOM 22 - KEY_APOSTROPHE"},
    {KEY_GRAVE, "DOM 19 - KEY_GRAVE"},
    {KEY_LEFTSHIFT, "DOM 16 - KEY_LEFTSHIFT"},
    {KEY_BACKSLASH, "DOM 22 - KEY_BACKSLASH"},
    {KEY_Z, "DOM 90 - KEY_Z"},
    {KEY_X, "DOM 88 - KEY_X"},
    {KEY_C, "DOM 67 - KEY_C"},
    {KEY_V, "DOM 86 - KEY_V"},
    {KEY_B, "DOM 66 - KEY_B"},
    {KEY_N, "DOM 78 - KEY_N"},
    {KEY_M, "DOM 77 - KEY_M"},
    {KEY_COMMA, "DOM 18 - KEY_COMMA"},
    {KEY_DOT, "DOM 19 - KEY_DOT"},
    {KEY_SLASH, "DOM 19 - KEY_SLASH"},
    {KEY_RIGHTSHIFT, "DOM 16 - KEY_RIGHTSHIFT"},
    {KEY_KPASTERISK, "DOM 10 - KEY_KPASTERISK"},
    {KEY_LEFTALT, "DOM 18 - KEY_LEFTALT"},
    {KEY_SPACE, "DOM 32 - KEY_SPACE"},
    {KEY_CAPSLOCK, "DOM 20 - KEY_CAPSLOCK"},
    {KEY_F1, "DOM 11 - KEY_F1"},
    {KEY_F2, "DOM 11 - KEY_F2"},
    {KEY_F3, "DOM 11 - KEY_F3"},
    {KEY_F4, "DOM 11 - KEY_F4"},
    {KEY_F5, "DOM 11 - KEY_F5"},
    {KEY_F6, "DOM 11 - KEY_F6"},
    {KEY_F7, "DOM 11 - KEY_F7"},
    {KEY_F8, "DOM 11 - KEY_F8"},
    {KEY_F9, "DOM 12 - KEY_F9"},
    {KEY_F10, "DOM 12 - KEY_F10"},
    {KEY_NUMLOCK, "DOM 14 - KEY_NUMLOCK"},
    {KEY_SCROLLLOCK, "DOM 14 - KEY_SCROLLLOCK"},
    {KEY_KP7, "DOM 10 - KEY_KP7"},
    {KEY_KP8, "DOM 10 - KEY_KP8"},
    {KEY_KP9, "DOM 10 - KEY_KP9"},
    {KEY_KPMINUS, "DOM 10 - KEY_KPMINUS"},
    {KEY_KP4, "DOM 10 - KEY_KP4"},
    {KEY_KP5, "DOM 10 - KEY_KP5"},
    {KEY_KP6, "DOM 10 - KEY_KP6"},
    {KEY_KPPLUS, "DOM 10 - KEY_KPPLUS"},
    {KEY_KP1, "DOM 97 - KEY_KP1"},
    {KEY_KP2, "DOM 98 - KEY_KP2"},
    {KEY_KP3, "DOM 99 - KEY_KP3"},
    {KEY_KP0, "DOM 96 - KEY_KP0"},
    {KEY_KPDOT, "DOM 11 - KEY_KPDOT"},
    {KEY_102ND, "DOM 18 - KEY_102ND"},
    {KEY_F11, "DOM 12 - KEY_F11"},
    {KEY_F12, "DOM 12 - KEY_F12"},
    {KEY_KPENTER, "DOM 13 - KEY_KPENTER"},
    {KEY_RIGHTCTRL, "DOM 17 - KEY_RIGHTCTRL"},
    {KEY_KPSLASH, "DOM 11 - KEY_KPSLASH"},
    {KEY_SYSRQ, "DOM 22 - KEY_SYSRQ"},
    {KEY_HOME, "DOM 36 - KEY_HOME"},
    {KEY_UP, "DOM 38 - KEY_UP"},
    {KEY_PAGEUP, "DOM 33 - KEY_PAGEUP"},
    {KEY_LEFT, "DOM 37 - KEY_LEFT"},
    {KEY_RIGHT, "DOM 39 - KEY_RIGHT"},
    {KEY_END, "DOM 35 - KEY_END"},
    {KEY_DOWN, "DOM 40 - KEY_DOWN"},
    {KEY_PAGEDOWN, "DOM 34 - KEY_PAGEDOWN"},
    {KEY_INSERT, "DOM 45 - KEY_INSERT"},
    {KEY_DELETE, "DOM 46 - KEY_DELETE"},
    {KEY_MUTE, "DOM 17 - KEY_MUTE"},
    {KEY_VOLUMEDOWN, "DOM 17 - KEY_VOLUMEDOWN"},
    {KEY_VOLUMEUP, "DOM 17 - KEY_VOLUMEUP"},
    {KEY_PAUSE, "DOM 19 - KEY_PAUSE"},
    {KEY_PLAYPAUSE, "DOM 17 - KEY_PLAYPAUSE"},
    {KEY_REWIND, "DOM 22 - KEY_REWIND"},
    {KEY_FASTFORWARD, "DOM 22 - KEY_FASTFORWARD"},
};

struct string_table_t *uinput_keys = keys;
unsigned num_uinput_keys = ARRAY_SIZE(keys);

char const *find_uinput_key(unsigned key){
	return find_string(key, uinput_keys, num_uinput_keys);
}
